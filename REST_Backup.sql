-- Generated by Oracle SQL Developer REST Data Services 19.1.0.094.2042
-- Exported REST Definitions from ORDS Schema Version 20.3.1.r3321735
-- Schema: BANDFINDER   Date: Tue Jan 19 20:00:02 CET 2021
--
BEGIN
  ORDS.ENABLE_SCHEMA(
      p_enabled             => TRUE,
      p_schema              => 'BANDFINDER',
      p_url_mapping_type    => 'BASE_PATH',
      p_url_mapping_pattern => 'bandfinder',
      p_auto_rest_auth      => FALSE);    

  ORDS.DEFINE_MODULE(
      p_module_name    => 'BANDFINDER',
      p_base_path      => '/users/',
      p_items_per_page =>  0,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);      
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'BANDFINDER',
      p_pattern        => 'auth',
      p_priority       => 9,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'BANDFINDER',
      p_pattern        => 'auth',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page =>  0,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
' 
 BEGIN
  create_new_session (
                        p_email               =>  :email,
                        p_password            =>  :password,
                        p_session_key         => :session_key,
                        p_session_expire_date => :session_expire_date
                     );
  :status := 200;
 EXCEPTION
    WHEN OTHERS THEN
     :status := 400;
     :err_msg := ''Error: Please try a difffernt email+password combination'';
end;'
      );
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'POST',
      p_name               => 'email',
      p_bind_variable_name => 'email',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'POST',
      p_name               => 'err_msg',
      p_bind_variable_name => 'err_msg',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'POST',
      p_name               => 'password',
      p_bind_variable_name => 'password',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'POST',
      p_name               => 'session_expire_date',
      p_bind_variable_name => 'session_expire_date',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'TIMESTAMP',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'POST',
      p_name               => 'session_key',
      p_bind_variable_name => 'session_key',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'POST',
      p_name               => 'status',
      p_bind_variable_name => 'status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'BANDFINDER',
      p_pattern        => 'auth',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page =>  0,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'SELECT
    CASE WHEN usr.session_key = :session_key AND usr.session_expire_date > sysdate
         THEN ''Y''
         ELSE ''N''
    END as edit_priv,
    firstname,
    lastname,
    TO_CHAR(birthday, ''YYYY-MM-DD'') as birthday,
    email,
    phonenumber,
    (SELECT LISTAGG(instr.name, '', '') 
       FROM user_instruments usr_instr
       INNER JOIN instruments instr    ON (usr_instr.instr_code = instr.instr_code)
       WHERE usr.usr_id = usr_instr.usr_id) as playing_instruments,
     (SELECT MAX(play_str.description) 
       FROM user_instruments usr_instr
       INNER JOIN play_level_str play_str    ON (usr_instr.play_level = play_str.play_level)
       WHERE usr.usr_id = usr_instr.usr_id) as playing_level,
       med.title,
       med.content_type,
       med.is_profile_picture,
       med.base64string
FROM
    users usr
INNER JOIN media med ON (usr.usr_id = med.usr_id AND med.is_profile_picture = ''Y'')
WHERE usr.usr_id = :usr_id
    
    
    '
      );
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'GET',
      p_name               => 'session_key',
      p_bind_variable_name => 'session_key',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'GET',
      p_name               => 'usr_id',
      p_bind_variable_name => 'usr_id',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'BANDFINDER',
      p_pattern        => 'auth',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page =>  0,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'BEGIN
    create_new_user (
        p_firstname  => :firstname,
        p_lastname   => :lastname,
        p_birthday   => TO_DATE(:birthday,''DD.MM.YYYY''),
        p_latitude   => :latitude,
        p_longitude  => :longitude,
        p_email      => :email,
        p_password   => :password,
        p_phonenumber => :phonenumber,
        p_session_key         => :session_key,
        p_session_expire_date => :session_expire_date);

    :status := 200;
EXCEPTION
    WHEN others THEN
    :status := 400;
    :err_msg := ''Error creating user: '' || SQLERRM();
END;'
      );
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'birthday',
      p_bind_variable_name => 'birthday',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'email',
      p_bind_variable_name => 'email',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'err_msg',
      p_bind_variable_name => 'err_msg',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'firstname',
      p_bind_variable_name => 'firstname',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'lastname',
      p_bind_variable_name => 'lastname',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'latitude',
      p_bind_variable_name => 'latitude',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'longitude',
      p_bind_variable_name => 'longitude',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'password',
      p_bind_variable_name => 'password',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'phonenumber',
      p_bind_variable_name => 'phonenumber',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'session_expire_date',
      p_bind_variable_name => 'session_expire_date',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'TIMESTAMP',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'session_key',
      p_bind_variable_name => 'session_key',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'auth',
      p_method             => 'PUT',
      p_name               => 'status',
      p_bind_variable_name => 'status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'INT',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'BANDFINDER',
      p_pattern        => 'instruments',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'BANDFINDER',
      p_pattern        => 'instruments',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page =>  0,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'SELECT ''play_levels'' as name, LISTAGG(description || '';'' || TO_CHAR(play_level), '';'') WITHIN GROUP (ORDER BY play_level) "instr_code"
FROM play_level_str
UNION ALL
SELECT name, instr_code
FROM instruments
'
      );
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'BANDFINDER',
      p_pattern        => 'instruments',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page =>  0,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
' 
DECLARE
   lv_list nt_split_result := nt_split_result();
   v_instr_code user_instruments.instr_code%TYPE;
   v_play_level user_instruments.play_level%TYPE;
   v_started_playing user_instruments.started_playing%TYPE ;
   BEGIN
     FOR i IN
     (SELECT trim(regexp_substr(:array_string, ''[^;]+'', 1, LEVEL)) l
     FROM dual
       CONNECT BY LEVEL <= regexp_count(:array_string, '';'')+1
     )
     LOOP
       lv_list := f_split_string_into_array(i.l,'','');
       v_instr_code := lv_list(1);
       v_play_level := lv_list(2);
       v_started_playing := TO_DATE(lv_list(3), ''DD.MM.YYYY'');
       
       upsert_user_instruemnts(p_session_key => :session_key
                              ,p_instr_code => v_instr_code
                              ,p_play_level => v_play_level
                              ,p_started_playing => v_started_playing);
     END LOOP;

     :status := 200;

     EXCEPTION
     WHEN OTHERS THEN
       :status := 400;
       :err_msg := SQLERRM;
   END;
'
      );
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'instruments',
      p_method             => 'PUT',
      p_name               => 'array_string',
      p_bind_variable_name => 'array_string',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'instruments',
      p_method             => 'PUT',
      p_name               => 'err_msg',
      p_bind_variable_name => 'err_msg',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'instruments',
      p_method             => 'PUT',
      p_name               => 'session_key',
      p_bind_variable_name => 'session_key',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'instruments',
      p_method             => 'PUT',
      p_name               => 'status',
      p_bind_variable_name => 'status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'INT',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'BANDFINDER',
      p_pattern        => 'media',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'BANDFINDER',
      p_pattern        => 'media',
      p_method         => 'POST',
      p_source_type    => 'plsql/block',
      p_items_per_page =>  0,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'declare 
 v_usr_id users.usr_id%TYPE;
begin
  SELECT usr_id
    INTO v_usr_id
    FROM users
   WHERE session_key = :session_key;

 insert into media (title,content_type,base64string, usr_id, is_profile_picture) 
             values  (:title,:content_type,:body, v_usr_id, :is_profile_picture);
 :status := 200;

 exception
 when others then
  :err_msg := SQLERRM;
  :status := 400;
end;'
      );
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'media',
      p_method             => 'POST',
      p_name               => 'content_type',
      p_bind_variable_name => 'content_type',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'media',
      p_method             => 'POST',
      p_name               => 'err_msg',
      p_bind_variable_name => 'err_msg',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'media',
      p_method             => 'POST',
      p_name               => 'is_profile_picture',
      p_bind_variable_name => 'is_profile_picture',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'media',
      p_method             => 'POST',
      p_name               => 'session_key',
      p_bind_variable_name => 'session_key',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'media',
      p_method             => 'POST',
      p_name               => 'status',
      p_bind_variable_name => 'status',
      p_source_type        => 'RESPONSE',
      p_param_type         => 'INT',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'media',
      p_method             => 'POST',
      p_name               => 'title',
      p_bind_variable_name => 'title',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'BANDFINDER',
      p_pattern        => 'search_results',
      p_priority       => 8,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'BANDFINDER',
      p_pattern        => 'search_results',
      p_method         => 'GET',
      p_source_type    => 'json/collection',
      p_items_per_page =>  0,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'WITH
    cur_user AS (SELECT /*+ materialize */
                        usr_id
                       ,longitude 
                       ,latitude 
                       ,birthday
                   FROM bandfinder.users
                  WHERE session_key = :session_key
                    AND session_expire_date >= sysdate)
    ,filter_settings AS (SELECT /*+ materialize */
                                :distance_radius    as max_distance
                               ,:instruments_filter as instruments 
                           FROM dual)
  SELECT usr_data.USR_ID
        ,usr_data.FIRSTNAME 
        ,usr_data.LASTNAME
        ,TO_CHAR(usr_data.BIRTHDAY, ''DD.MM.YYYY'') as birthday
        ,usr_data.phonenumber
        ,usr_data.LATITUDE
        ,usr_data.LONGITUDE
        ,ROUND(usr_data.DISTANCE) as distance
        ,usr_data.RATING
        ,(SELECT LISTAGG(list_instr.name, '', '') --LISTAGG(list_instr.name || ('' ('' || play_level || '')''), '', '')
          WITHIN GROUP (ORDER BY play_level)
            FROM user_instruments list_usr_instr
           INNER JOIN instruments list_instr ON (list_usr_instr.instr_code = list_instr.instr_code) 
           WHERE list_usr_instr.usr_id = usr_data.usr_id) as playing_instruments
        ,base64string
        ,picture_title
        ,content_type
	FROM (SELECT usr.*
                ,med.base64string
                ,med.title as picture_title
                ,med.content_type
                ,bandfinder.distance(  Lat1 => (SELECT latitude  FROM cur_user)
                                      ,Lon1 => (SELECT longitude FROM cur_user)
                                      ,Lat2 => usr.latitude
                                      ,Lon2 => usr.longitude) as distance
                ,bandfinder.performance_rating(p_usr_id1 => (SELECT usr_id  FROM cur_user)
                                              ,p_usr_id2 => usr.usr_id) as rating
            FROM bandfinder.users usr
            INNER JOIN bandfinder.media med
                    ON (usr.usr_id = med.usr_id AND med.is_profile_picture = ''Y'')
            WHERE usr.usr_id != (SELECT usr_id FROM cur_user) 
        ) usr_data
   WHERE usr_data.distance <= (SELECT max_distance FROM filter_settings)
     AND usr_data.usr_id IN ( SELECT usr_id
                                FROM bandfinder.user_instruments
                               WHERE INSTR((SELECT instruments FROM filter_settings), instr_code) > 0
                                  OR (SELECT instruments FROM filter_settings) IS NULL)
  ORDER BY rating DESC'
      );
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'search_results',
      p_method             => 'GET',
      p_name               => 'Distance_Radius',
      p_bind_variable_name => 'distance_radius',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'search_results',
      p_method             => 'GET',
      p_name               => 'Instruments_Filter',
      p_bind_variable_name => 'instruments_filter',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'BANDFINDER',
      p_pattern            => 'search_results',
      p_method             => 'GET',
      p_name               => 'Session_key',
      p_bind_variable_name => 'session_key',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      

  ORDS.DEFINE_MODULE(
      p_module_name    => 'oracle.example.hr',
      p_base_path      => '/hr/',
      p_items_per_page =>  25,
      p_status         => 'PUBLISHED',
      p_comments       => NULL);      
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empinfo/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empinfo/',
      p_method         => 'GET',
      p_source_type    => 'csv/query',
      p_items_per_page =>  25,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select * from emp'
      );
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employees/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employees/',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_items_per_page =>  7,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select empno "$uri", rn, empno, ename, job, hiredate, mgr, sal, comm, deptno
  from (
       select emp.*
            , row_number() over (order by empno) rn
         from emp
       ) tmp'
      );
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employees/:id',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employees/:id',
      p_method         => 'GET',
      p_source_type    => 'json/query;type=single',
      p_items_per_page =>  25,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select * from emp 
where empno = :id'
      );
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employees/:id',
      p_method         => 'PUT',
      p_source_type    => 'plsql/block',
      p_items_per_page =>  25,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'begin
    update emp set ename = :ename, job = :job, hiredate = :hiredate, mgr = :mgr, sal = :sal, comm = :comm, deptno = :deptno
    where empno = :id;
    :status := 200;
    :location := :id;
exception
    when others then
        :status := 400;
end;'
      );
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'oracle.example.hr',
      p_pattern            => 'employees/:id',
      p_method             => 'PUT',
      p_name               => 'ID',
      p_bind_variable_name => 'id',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'IN',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'oracle.example.hr',
      p_pattern            => 'employees/:id',
      p_method             => 'PUT',
      p_name               => 'X-APEX-FORWARD',
      p_bind_variable_name => 'location',
      p_source_type        => 'HEADER',
      p_param_type         => 'STRING',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_PARAMETER(
      p_module_name        => 'oracle.example.hr',
      p_pattern            => 'employees/:id',
      p_method             => 'PUT',
      p_name               => 'X-APEX-STATUS-CODE',
      p_bind_variable_name => 'status',
      p_source_type        => 'HEADER',
      p_param_type         => 'INT',
      p_access_method      => 'OUT',
      p_comments           => NULL);      
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employeesfeed/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employeesfeed/',
      p_method         => 'GET',
      p_source_type    => 'json/query;type=feed',
      p_items_per_page =>  25,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select empno, ename from emp order by deptno, ename'
      );
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employeesfeed/:id',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'employeesfeed/:id',
      p_method         => 'GET',
      p_source_type    => 'csv/query',
      p_items_per_page =>  25,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select * from emp where empno = :id'
      );
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empsec/:empname',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empsec/:empname',
      p_method         => 'GET',
      p_source_type    => 'json/query',
      p_items_per_page =>  25,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'select empno, ename, deptno, job from emp 
	where ((select job from emp where ename = :empname) IN (''PRESIDENT'', ''MANAGER'')) 
    OR  
    (deptno = (select deptno from emp where ename = :empname)) 
order by deptno, ename
'
      );
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empsecformat/:empname',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'empsecformat/:empname',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_items_per_page =>  25,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'DECLARE
  prevdeptno     number;
  total_rows     number;
  deptloc        varchar2(20);
  deptname       varchar2(20);
  
  CURSOR         getemps is select * from emp 
                             start with ename = :empname
                           connect by prior empno = mgr
                             order siblings by deptno, ename;
BEGIN
  sys.htp.htmlopen;
  sys.htp.headopen;
  sys.htp.title(''Hierarchical Department Report for Employee ''||apex_escape.html(:empname));
  sys.htp.headclose;
  sys.htp.bodyopen;
 
  for l_employee in getemps 
  loop
      if l_employee.deptno != prevdeptno or prevdeptno is null then
          select dname, loc 
            into deptname, deptloc 
            from dept 
           where deptno = l_employee.deptno;
           
          if prevdeptno is not null then
              sys.htp.print(''</ul>'');
          end if;

          sys.htp.print(''Department '' || apex_escape.html(deptname) || '' located in '' || apex_escape.html(deptloc) || ''<p/>'');
          sys.htp.print(''<ul>'');
      end if;

      sys.htp.print(''<li>'' || apex_escape.html(l_employee.ename) || '', ''  || apex_escape.html(l_employee.empno) || '', '' || 
                        apex_escape.html(l_employee.job) || '', '' || apex_escape.html(l_employee.sal) || ''</li>'');

      prevdeptno := l_employee.deptno;
      total_rows := getemps%ROWCOUNT;
      
  end loop;

  if total_rows > 0 then
      sys.htp.print(''</ul>'');
  end if;

  sys.htp.bodyclose;
  sys.htp.htmlclose;
END;'
      );
  ORDS.DEFINE_TEMPLATE(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'version/',
      p_priority       => 0,
      p_etag_type      => 'HASH',
      p_etag_query     => NULL,
      p_comments       => NULL);
  ORDS.DEFINE_HANDLER(
      p_module_name    => 'oracle.example.hr',
      p_pattern        => 'version/',
      p_method         => 'GET',
      p_source_type    => 'plsql/block',
      p_items_per_page =>  25,
      p_mimes_allowed  => '',
      p_comments       => NULL,
      p_source         => 
'begin 
 sys.htp.p(''{"version": "20.2"}'');
end;'
      );


  COMMIT; 
END;